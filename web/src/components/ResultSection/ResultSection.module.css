.container {
  background: #fff;
  border-radius: 12px;
  padding: 0;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  border: 1px solid #eaeaea;
  height: 100%;
  display: flex;
  flex-direction: column;
  animation: fadeIn 0.8s ease forwards;
}

.tabsContainer {
  display: flex;
  background-color: #f8f9fa;
  border-bottom: 1px solid #e9ecef;
  position: sticky;
  top: 0;
  z-index: 10;
}

.tabButton {
  padding: 16px 20px;
  border: none;
  background: transparent;
  font-size: 0.95rem;
  font-weight: 500;
  color: #6c757d;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  display: flex;
  align-items: center;
  gap: 8px;
}

.tabButton:hover {
  color: #4a90e2;
  background-color: rgba(74, 144, 226, 0.05);
}

.activeTab {
  color: #4a90e2;
  font-weight: 600;
}

.activeTab::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background-color: #4a90e2;
  animation: fadeIn 0.3s ease forwards;
}

.tabCount {
  background-color: #e9ecef;
  color: #495057;
  border-radius: 20px;
  padding: 2px 8px;
  font-size: 0.75rem;
  font-weight: 600;
  min-width: 24px;
  text-align: center;
  transition: all 0.3s ease;
}

.tabContent {
  flex: 1;
  overflow-y: auto;
  padding: 20px;
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.section {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* Métricas */
.metricas {
  background-color: #f8f9fa;
  border-radius: 8px;
  padding: 20px;
  border: 1px solid #eaeaea;
  transition: box-shadow 0.3s ease;
}

.metricas:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.metricas h3 {
  color: #343a40;
  margin-top: 0;
  margin-bottom: 20px;
  font-size: 1.1rem;
  font-weight: 600;
  padding-bottom: 12px;
  border-bottom: 1px solid #e9ecef;
}

.metricasGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 16px;
}

.metricaItem {
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border-radius: 8px;
  padding: 16px;
  border: 1px solid #eaeaea;
  /* Adicionando transições para hover e focus */
  transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
}

.metricaItem:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  border-color: #d0d0d0;
}

.metricaIcon {
  margin-bottom: 12px;
  color: #6c757d;
  transition: transform 0.3s ease, color 0.3s ease;
}

.metricaItem:hover .metricaIcon {
  transform: scale(1.2);
}

.metricaLabel {
  font-size: 0.85rem;
  color: #6c757d;
  margin-bottom: 8px;
}

.metricaValue {
  font-size: 1.5rem;
  font-weight: 600;
  color: #343a40;
  transition: color 0.3s ease;
  /* Adicionar efeito de destaque quando o valor é carregado */
  animation: pulse 1s ease-in-out;
}

.metricaItem:hover .metricaValue {
  color: #4a90e2;
}

.metricaValido .metricaIcon {
  color: #2e7d32;
}

.metricaInvalido .metricaIcon {
  color: #c62828;
}

/* Melhorias para os itens válidos e inválidos */
.metricaValido:hover .metricaIcon {
  color: #1b5e20;
}

.metricaInvalido:hover .metricaIcon {
  color: #b71c1c;
}

/* Empty states */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  text-align: center;
  color: #6c757d;
  animation: fadeIn 0.8s ease forwards, pulse 2s ease-in-out 1s;
}

.emptyStateIcon {
  color: #adb5bd;
  margin-bottom: 16px;
  animation: pulse 2s infinite ease-in-out;
}

.emptyState p {
  font-size: 1.1rem;
  font-weight: 500;
  margin: 0 0 8px 0;
}

.emptyStateTab {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 30px;
  text-align: center;
  color: #6c757d;
  background-color: #f8f9fa;
  border-radius: 8px;
  border: 1px dashed #dee2e6;
  animation: fadeIn 0.8s ease forwards, pulse 2s ease-in-out 1s;
}

.emptyIcon {
  color: #adb5bd;
  margin-bottom: 12px;
  animation: pulse 2s infinite ease-in-out;
}

/* Resultado da efetivação */
.resultadoEfetivar {
  background-color: #fff;
  border-radius: 8px;
  padding: 20px;
  border: 1px solid #e9ecef;
  animation: fadeInUp 0.5s ease forwards;
}

.resultadoEfetivar h3 {
  color: #343a40;
  margin-top: 0;
  margin-bottom: 20px;
  font-size: 1.1rem;
  font-weight: 600;
  padding-bottom: 12px;
  border-bottom: 1px solid #e9ecef;
  animation: fadeIn 0.5s ease forwards;
}

.resultadoEfetivar h4 {
  color: #495057;
  margin-top: 24px;
  margin-bottom: 16px;
  font-size: 1rem;
  font-weight: 500;
}

.resultadoMensagem {
  display: flex;
  align-items: center;
  background-color: #e8f4fd;
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 20px;
  border-left: 4px solid #4a90e2;
  gap: 12px;
  animation: fadeInRight 0.5s ease forwards, borderPulse 2s ease-in-out 1s;
}

.resultadoMensagem svg {
  color: #4a90e2;
  flex-shrink: 0;
}

.resultadoMensagem p {
  margin: 0;
  color: #343a40;
  font-weight: 500;
}

/* Tabela de duplicados */
.duplicadosTabela {
  overflow-x: auto;
  margin-top: 10px;
  background-color: white;
  border-radius: 8px;
  border: 1px solid #e9ecef;
  animation: fadeIn 0.8s ease forwards;
}

.duplicadosTabela table {
  width: 100%;
  border-collapse: collapse;
}

.duplicadosTabela th {
  background-color: #f8f9fa;
  padding: 12px 15px;
  text-align: left;
  font-weight: 500;
  color: #495057;
  border-bottom: 2px solid #e9ecef;
}

.duplicadosTabela td {
  padding: 10px 12px;
  border-bottom: 1px solid #e9ecef;
}

.duplicadosTabela tr {
  transition: background-color 0.3s ease;
}

.duplicadosTabela tr:hover {
  background-color: #f8f9fa;
}

.itemValido {
  background-color: rgba(46, 125, 50, 0.04);
}

.itemInvalido {
  background-color: rgba(198, 40, 40, 0.04);
}

.statusValido {
  color: #2e7d32;
  font-weight: 600;
}

.statusInvalido {
  color: #c62828;
  font-weight: 600;
}

/* Botão de Efetivar */
.actionsContainer {
  display: flex;
  justify-content: center;
  padding: 16px;
  background-color: #f8f9fa;
  border-top: 1px solid #e9ecef;
  margin-top: auto;
}

.efetivarButton {
  background-color: #2e7d32;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 50px;
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.efetivarButton:hover {
  background-color: #1b5e20;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(46, 125, 50, 0.3);
}

.efetivarButton:active {
  transform: translateY(0);
}

.efetivarButton:hover svg {
  animation: spin 0.5s ease;
}

.efetivarButton::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.4);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%);
  transform-origin: 50% 50%;
}

.efetivarButton:hover::after {
  animation: ripple 0.8s ease-out;
}

.efetivarButton:disabled {
  background-color: #adb5bd;
  cursor: not-allowed;
}

.loadingContainer {
  display: flex;
  justify-content: center;
  padding: 10px 20px;
  background-color: rgba(46, 125, 50, 0.1);
  border-radius: 50px;
  border: 1px solid rgba(46, 125, 50, 0.2);
  min-width: 180px;
  animation: fadeIn 0.5s ease forwards;
}

/* Responsive */
@media (max-width: 992px) {
  .metricasGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 576px) {
  .metricasGrid {
    grid-template-columns: 1fr;
  }

  .tabsContainer {
    overflow-x: auto;
  }

  .tabButton {
    padding: 10px 12px;
    font-size: 0.8rem;
  }
}

.searchContainer {
  margin-bottom: 12px;
  position: relative;
}

.searchInputWrapper {
  display: flex;
  align-items: center;
  background-color: #f9f9f9;
  border: 1px solid #eee;
  border-radius: 8px;
  padding: 0 12px;
  transition: all 0.3s ease;
  animation: fadeIn 0.5s ease forwards;
}

.searchInputWrapper:focus-within {
  border-color: #4a90e2;
  box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.15);
  transform: translateY(-1px);
}

.searchIcon {
  color: #888;
  margin-right: 8px;
}

.searchInput {
  flex: 1;
  border: none;
  background: transparent;
  padding: 10px 0;
  font-size: 0.9rem;
  color: #333;
  width: 100%;
}

.searchInput:focus {
  outline: none;
}

.searchInput::placeholder {
  color: #aaa;
}

.noResultsMessage {
  text-align: center;
  color: #888;
  font-size: 0.9rem;
  padding: 12px 0;
  font-style: italic;
  animation: fadeIn 0.5s ease forwards;
}

/* ========== Animações Globais ========== */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.03); }
  100% { transform: scale(1); }
}

@keyframes borderPulse {
  0% { border-color: #eaeaea; }
  50% { border-color: #4a90e2; }
  100% { border-color: #eaeaea; }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(20, 20);
    opacity: 0;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes expandWidth {
  from { width: 0; }
  to { width: 100%; }
}

/* Classes de animação reutilizáveis */
.animate-fadeIn {
  animation: fadeIn 0.5s ease forwards;
}

.animate-fadeInUp {
  animation: fadeInUp 0.6s ease forwards;
}

.animate-fadeInRight {
  animation: fadeInRight 0.5s ease forwards;
}

.animate-scaleIn {
  animation: scaleIn 0.5s ease forwards;
}

.animate-pulse {
  animation: pulse 1.5s ease-in-out;
}

.animate-borderPulse {
  animation: borderPulse 1.5s ease-in-out;
}

.animateFadeIn {
  animation: fadeIn 0.5s ease forwards;
}

.animateFadeInUp {
  animation: fadeInUp 0.6s ease forwards;
}

.animateFadeInRight {
  animation: fadeInRight 0.5s ease forwards;
}

.animateScaleIn {
  animation: scaleIn 0.5s ease forwards;
}

.animatePulse {
  animation: pulse 1.5s ease-in-out;
}

/* Atraso em animações sequenciais */
.delay-100 { animation-delay: 100ms; }
.delay-200 { animation-delay: 200ms; }
.delay-300 { animation-delay: 300ms; }
.delay-400 { animation-delay: 400ms; }
.delay-500 { animation-delay: 500ms; }

/* Transições globais */
.transition-all, .transitionAll {
  transition: all 0.3s ease;
}

.transition-transform {
  transition: transform 0.3s ease;
}

.transition-colors {
  transition: color 0.3s ease, background-color 0.3s ease;
}

/* Hover effects */
.hover-lift, .hoverLift {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover, .hoverLift:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.hover-lift:active, .hoverLift:active {
  transform: translateY(-1px);
  transition: transform 0.1s ease;
}

/* Animações para transições entre abas */
.fadeOut {
  opacity: 0;
  transform: scale(0.98);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.fadeIn {
  opacity: 1;
  transform: scale(1);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0.95;
    transform: scale(0.98);
  }
}

.animateScaleOut {
  animation: scaleOut 0.3s ease;
}

/* Animações para as abas */
.animateTabsContainer {
  position: relative;
  overflow: hidden;
}

.tabButton:hover::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 0;
  height: 3px;
  background-color: rgba(74, 144, 226, 0.3);
  transform: translateX(-50%);
  animation: expandWidth 0.3s ease forwards;
}

/* Animações específicas para o botão de efetivar */
.efetivarButton:hover svg {
  animation: spin 0.5s ease;
}

/* Animações para elementos editáveis */
.editableContent {
  position: relative;
}

.editableContent::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background-color: #4a90e2;
  transition: width 0.3s ease;
}

.editableContent:hover::after {
  width: 100%;
}

/* Animação para estado de foco */
.focusAnimation:focus-within {
  animation: pulseBorder 1.5s ease;
}

@keyframes pulseBorder {
  0% { border-color: #eaeaea; }
  50% { border-color: #4a90e2; box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.15); }
  100% { border-color: #eaeaea; }
}

/* Efeito de highlight para mudanças */
.highlightChange {
  animation: highlightBackground 2s ease;
}

@keyframes highlightBackground {
  0% { background-color: rgba(74, 144, 226, 0); }
  30% { background-color: rgba(74, 144, 226, 0.1); }
  100% { background-color: rgba(74, 144, 226, 0); }
}

/* Animação para notificações */
.notificationDot {
  position: relative;
}

.notificationDot::after {
  content: '';
  position: absolute;
  top: 3px;
  right: 3px;
  width: 8px;
  height: 8px;
  background-color: #e53935;
  border-radius: 50%;
  animation: pulseNotification 2s infinite;
}

@keyframes pulseNotification {
  0% { transform: scale(0.8); opacity: 0.5; }
  50% { transform: scale(1.2); opacity: 1; }
  100% { transform: scale(0.8); opacity: 0.5; }
}

/* Animação para tabs switch */
.tabContentWrapper {
  position: relative;
  min-height: 200px;
}

.tabContentSlide {
  position: absolute;
  width: 100%;
  opacity: 0;
  transform: translateX(20px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.tabContentActive {
  opacity: 1;
  transform: translateX(0);
}

/* MetricsSummary Animações (já existentes) */
.slideIn {
  opacity: 0;
  animation: slideInUp 0.5s ease forwards;
}

.metricasTitulo {
  animation: fadeIn 0.5s ease forwards;
}